---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Lambda function and API Gateway API'

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda_role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: invoke_api_policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - apigateway:*
                Resource: '*'
  SortJsonFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: sort_json
      Runtime: nodejs12.x
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Code:
        ZipFile: !Sub |
          'use strict';
          
          exports.handler = async (event) => {
            let sorted;
            
            // Sort the input based on the specified parameter
            if (event.sortBy === 'key') {
              // Sort the JSON object alphabetically by key
              sorted = {};
              Object.keys(event.data).sort().forEach((key) => {
                sorted[key] = event.data[key];
              });
            } else if (event.sortBy === 'alphabetical') {
              // Sort the JSON array alphabetically by element value
              sorted = event.data.sort((a, b) => a.localeCompare(b));
            } else if (event.sortBy === 'numeric') {
              // Sort the JSON array numerically by element value
              sorted = event.data.sort((a, b) => a - b);
            }
            
            return {
              statusCode: 200,
              body: JSON.stringify(sorted),
            };
          };
  SortJsonApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: sort_json_api
  SortJsonResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref SortJsonApi
      ParentId: !GetAtt SortJsonApi.RootResourceId
      PathPart: sort
  SortJsonMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !Ref SortJsonResource
      RestApiId: !Ref SortJsonApi
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SortJsonFunction.Arn}/invocations'
  SortJsonPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SortJsonFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SortJsonApi}/*/*'